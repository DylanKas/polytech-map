<?php

namespace AppBundle\Repository;

/**
 * EcoleRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EcoleRepository extends \Doctrine\ORM\EntityRepository
{
    public function findAllByRecherche($recherche){
        $res = $this->getEntityManager()->createQuery(
            "SELECT e FROM AppBundle:Ecole e WHERE UPPER(e.patronyme) = UPPER('".$recherche. "') OR UPPER(e.nature) = UPPER('".$recherche. "') OR UPPER(e.academie) = UPPER('".$recherche. "')")->setMaxResults(500)->getResult();
        return $res;
    }
    public function genererGeoJSON($latitude, $longitude, $rayon){
            $json = "{
                \"type\": \"FeatureCollection\",
                \"features\": [";
                $listePoints = $this->executerSQL("CALL get_points_ecoles($latitude, $longitude, $rayon);");
                foreach ($listePoints as $point) {
                $json .= "
                         {
                           \"type\": \"Feature\",
                           \"geometry\": {
                             \"type\": \"Point\",
                             \"coordinates\": [". strval($point["longitude"]) . ", " . strval($point["latitude"]) ."]
                           },
                           \"properties\": {
                             \"name\": \"". $point["patronyme"] ."\"
                             }
                         },\n";
                }
                $json = substr($json, 0, -2);
                $json.= "\n]\n}";
                /*
                if (!$handle = fopen("geo.json", 'w')) {
                     echo "Impossible d'ouvrir le fichier (geo.json)";
                     exit;
                }
                if (fwrite($handle, $json) === FALSE) {
                    echo "Impossible d'Ã©crire dans le fichier (geo.json)";
                    exit;
                }
                fclose($handle);
                */
            return $json;
    }

    public function executerSQL($commandeSQL){

        return $this->getEntityManager()->getConnection()->executeQuery($commandeSQL)->fetchAll();
    }

    public function findNbDataEcole(){
        $res = $this->getEntityManager()->createQuery(
            "SELECT COUNT(e) FROM AppBundle:Ecole e")->getResult();
        return $res;
    }

}
